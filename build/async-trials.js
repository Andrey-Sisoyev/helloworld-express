// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var agen1, agen2, cases, getRandomInt, i, iced, l, out, utils, x, z, __iced_k, __iced_k_noop,
    __hasProp = {}.hasOwnProperty;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  utils = require('./lib/utils');

  getRandomInt = function() {
    return utils.getRandomInt(1, 1000);
  };

  agen1 = function(name, cb1) {
    return utils.setTimeout0(function() {
      return cb1(name + getRandomInt());
    });
  };

  agen2 = function(name1, name2, cb2) {
    return utils.setTimeout0(function() {
      return cb1(name1 + getRandomInt(), name2 + getRandomInt());
    });
  };

  i = void 0;

  l = void 0;

  out = void 0;

  z = void 0;

  x = null;

  console.log(x);

  cases = {
    _1: function(fName) {
      var a, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_1"
        });
        agen1('A', __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return a = arguments[0];
            };
          })(),
          lineno: 21
        }));
        __iced_deferrals._fulfill();
      })(function() {
        return console.log(fName + ' i: ' + a);

        /*
        
        Case _1
        
        ...
        _1 i: A479
        */
      });
    },
    _2: function(fName) {
      var a, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_2"
        });
        agen1('A', __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return a = arguments[0];
            };
          })(),
          lineno: 34
        }));
        console.log(fName + ' i: ' + a);
        __iced_deferrals._fulfill();
      })(function() {
        return console.log(fName + ' ii: ' + a);

        /*
        
        Case _2
        _2 i: undefined
        
        ...
        _2 ii: A562
        */
      });
    },
    _3: function(fName) {
      var a, b, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_3"
        });
        agen1('A', __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return a = arguments[0];
            };
          })(),
          lineno: 49
        }));
        agen1('B', __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return b = arguments[0];
            };
          })(),
          lineno: 50
        }));
        console.log(fName + ' iA: ' + a);
        console.log(fName + ' iB: ' + b);
        __iced_deferrals._fulfill();
      })(function() {
        console.log(fName + ' iiA: ' + a);
        return console.log(fName + ' iiB: ' + b);

        /*
        
        Case _3
        _3 iA: undefined
        _3 iB: undefined
        
        ...
        _3 iiA: A76
        _3 iiB: B946
        */
      });
    },
    _4: function(fName) {
      var a, b, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_4"
        });
        x = 3;
        console.log(fName + ' x: ' + x);
        if (x > 5) {
          agen1('A', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return a = arguments[0];
              };
            })(),
            lineno: 73
          }));
        } else {
          agen1('B', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return b = arguments[0];
              };
            })(),
            lineno: 75
          }));
        }
        console.log(fName + ' iA: ' + a);
        console.log(fName + ' iB: ' + b);
        __iced_deferrals._fulfill();
      })(function() {
        console.log(fName + ' iiA: ' + a);
        return console.log(fName + ' iiB: ' + b);

        /*
        
        Case _4
        _4 x: 3
        _4 iA: undefined
        _4 iB: undefined
        
        ...
        _4 iiA: undefined
        _4 iiB: B53
        */
      });
    },
    _5: function(fName) {
      var a, b, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_5"
        });
        x = 7;
        console.log(fName + ' x: ' + x);
        if (x > 5) {
          agen1('A', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return a = arguments[0];
              };
            })(),
            lineno: 98
          }));
        } else {
          agen1('B', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return b = arguments[0];
              };
            })(),
            lineno: 100
          }));
        }
        console.log(fName + ' iA: ' + a);
        console.log(fName + ' iB: ' + b);
        __iced_deferrals._fulfill();
      })(function() {
        console.log(fName + ' iiA: ' + a);
        return console.log(fName + ' iiB: ' + b);

        /*
        
        Case _5
        _5 x: 7
        _5 iA: undefined
        _5 iB: undefined
        
        ...
        _5 iiA: A5
        _5 iiB: undefined
        */
      });
    },
    _6: function(fName) {
      var z, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        var _i;
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_6"
        });
        l = utils.getRandomInt(5, 10);
        console.log(fName + ' iL: ' + l);
        out = [];
        for (i = _i = 1; 1 <= l ? _i <= l : _i >= l; i = 1 <= l ? ++_i : --_i) {
          agen1('Z', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return z = arguments[0];
              };
            })(),
            lineno: 124
          }));
          out.push(z);
        }
        console.log(fName + ' iZ: ' + z);
        console.log(fName + ' iOut: ' + out + ' ');
        __iced_deferrals._fulfill();
      })(function() {
        console.log(fName + ' iiL: ' + l);
        console.log(fName + ' iiZ: ' + z);
        return console.log(fName + ' iiOut: ' + out + typeof out);

        /*
        
        Case _6
        _6 iL: 8
        _6 iZ: undefined
        _6 iOut: ,,,,,,,
        
        ...
        _6 iiL: 8
        _6 iiZ: Z585
        _6 iiOut: object
        */
      });
    },
    _7: function(fName) {
      var ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        var _i;
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/async-trials.iced",
          funcname: "_7"
        });
        l = utils.getRandomInt(5, 10);
        console.log(fName + ' iL: ' + l);
        out = [];
        for (i = _i = 0; 0 <= l ? _i <= l : _i >= l; i = 0 <= l ? ++_i : --_i) {
          agen1('Z', __iced_deferrals.defer({
            assign_fn: (function(__slot_1, __slot_2) {
              return function() {
                return __slot_1[__slot_2] = arguments[0];
              };
            })(out, i),
            lineno: 153
          }));
        }
        console.log(fName + ' iOut: ' + out + ' ' + typeof out);
        __iced_deferrals._fulfill();
      })(function() {
        console.log(fName + ' iiL: ' + l);
        return console.log(fName + ' iiOut: ' + out);

        /*
        
        Case _7
        _7 iL: 8
        _7 iOut: object
        
        ...
        _7 iiL: 8
        _7 iiOut: Z937,Z723,Z859,Z358,Z575,Z125,Z10,Z702,Z821
        */
      });
    }
  };

  exports.run = function() {
    var key, value, _results;
    _results = [];
    for (key in cases) {
      if (!__hasProp.call(cases, key)) continue;
      value = cases[key];
      console.log('\nCase ' + key);
      _results.push(value(key));
    }
    return _results;
  };

}).call(this);
